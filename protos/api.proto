syntax = "proto3";

package vault;

service Vault {

    // These methods are called by the CLI.

    // Get a service account and all the secrets inside, we need
    // the public ecdh address of the service account.
    rpc GetServiceAccount(GetServiceAccountRequest) returns (GetServiceAccountResponse);

    // These methods are called by the front end. The user will need
    // to be logged as as they are authenticated by authn-proxy

    // Get a vault and all the secrets inside as well as connected service accounts
    rpc GetVault(GetVaultRequest) returns (GetVaultResponse);
    // Add secrets to multiple service accounts.
    rpc CreateSecrets(CreateSecretsRequest) returns (CreateSecretsResponse);
}

message Secret {
    string encrypted_name = 1;
    string encrypted_secret_value = 2;
}

message ServiceAccount {
    uint32 service_account_id = 1;
    string public_ecdh_key = 2;
}

message ServiceAccountSecrets {
    uint32 service_account_id = 1;
    repeated Secret secrets = 4;
}

message GetServiceAccountRequest {
    string ecdh_public_key = 1;
}

message GetServiceAccountResponse {
    uint32 service_account_id = 1;
    string vault_public_ecdh_key = 2;
    repeated Secret secrets = 3;
}

message GetVaultRequest {
    uint32 vault_id = 1;
}

message GetVaultResponse {
    string name = 1;
    string encrypted_vault_key = 2;
    string vault_public_ecdh_key = 3;
    string encrypted_vault_private_ecdh_key = 4;
    repeated Secret secrets = 5;
    repeated ServiceAccount service_accounts = 6;
}

message CreateSecretsRequest {
    repeated ServiceAccountSecrets account_secrets = 1;
}

message CreateSecretsResponse {
}